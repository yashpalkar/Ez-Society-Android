mutation RegisterVisitor($contact_no: String!, $guard_id: uuid!, $last_visited_at: timestamptz!, $name: String!, $society_id: uuid!, $verified: Boolean!, $image: String!) {
  insert_society_visitors_one(object: {name: $name, last_visited_at: $last_visited_at, verified: $verified, society_id: $society_id, guard_id: $guard_id, contact_no: $contact_no, image: $image}) {
    id
    last_visited_at
    name
    society_id
    guard_id
    created_at
    contact_no
    updated_at
    verified
    image
  }
}

mutation AddVisitorCheckin($check_in: timestamptz!, $flat_no: String!, $guard_id: uuid!, $is_allowed: String!, $society_id: uuid!, $visitor_id: uuid!) {
  insert_society_visitors_checkin_one(object: {visitor_id: $visitor_id, society_id: $society_id, guard_id: $guard_id, flat_no: $flat_no, check_in: $check_in, is_allowed: $is_allowed}) {
    visitor_id
    id
  }
}


query GetVisitorCheckIn($_eq: uuid!) {
  society_visitors_checkin(where: {society_id: {_eq: $_eq}}) {
    attended_time
    check_in
    flat_no
    guard_id
    id
    is_allowed
    society_id
  }
}

query VisitorListBySocietyId($limit: Int!, $offset: Int!, $_eq: uuid!) {
  society_visitors_checkin(where: {society_id: {_eq: $_eq}}, limit: $limit, offset: $offset,order_by: {check_in: desc}) {
    attended_time
    check_in
    check_out
    flat_no
    guard_id
    id
    is_allowed
    society_id
    visitor_id
    society_visitors_checkin_society_visitor {
      contact_no
      image
      name
      verified
      created_at
      guard_id
      id
      last_visited_at
      society_id
      updated_at
    }
  }
}

query VisitorListBySocietyIdFilter($endDate: timestamptz!, $limit: Int!, $offset: Int!, $_gte: timestamptz!,$_eq: uuid!) {
  society_visitors_checkin(limit: $limit, offset: $offset, where: {check_in: {_gte: $_gte, _lte: $endDate}, society_id: {_eq: $_eq}},order_by: {check_in: desc}) {
    attended_time
    check_in
    check_out
    flat_no
    guard_id
    id
    is_allowed
    society_id
    visitor_id
    society_visitors_checkin_society_visitor {
      contact_no
      image
      name
      verified
      created_at
      guard_id
      id
      last_visited_at
      society_id
      updated_at
    }
  }
}


mutation UpdateCheckVisitor($_eq: uuid!, $_eq1: uuid!, $check_out: timestamptz!, $attended_time: interval!) {
  update_society_visitors_checkin(where: {id: {_eq: $_eq1}, society_id: {_eq: $_eq}}, _set: {check_out: $check_out, attended_time: $attended_time}) {
    affected_rows
  }
}

mutation CheckVisitorNumber($visitor_number: String!, $society_id: String!) {
    checkVisitorNumber(object: {visitor_number: $visitor_number, society_id: $society_id}) {
      visitor_data
      visitor_type
    }
  }

mutation NewVisitorCheckIN($visitor_data: VisitorDataInput!, $visitor_type: String!) {
  visitorsCheckin(visitor_type: $visitor_type, visitor_data: $visitor_data) {
    message
  }
}
  mutation VisitorRecheckIn($visitor_type: String!, $visitor_id: String!, $check_in_time: String!, $flat_no: String!, $guard_id: String!, $image: String!, $last_visited_at: String!, $name: String!, $verified: String!, $society_id: String!, $contact_no: String!) {
    visitorsCheckin(visitor_type: $visitor_type, visitor_data: {check_in_time: $check_in_time, guard_id: $guard_id, visitor_id: $visitor_id, flat_no: $flat_no, image: $image, last_visited_at: $last_visited_at, name: $name, verified: $verified, contact_no: $contact_no, society_id: $society_id}) {
      message
    }
  }

  mutation AddVisitorImage($image: String!, $id: uuid!) {
    update_society_visitors_by_pk(pk_columns: {id: $id}, _set: {image: $image}) {
      image
      name
    }
  }



query getSocietiesVisitors($limit: Int, $offset: Int, $_eq: uuid!, $_ilike: String!) {
  society_visitors(limit: $limit, offset: $offset, where: {_or: [{name: {_ilike:  $_ilike}}, {contact_no: {_ilike:  $_ilike}}], society_id: {_eq: $_eq}}) {
    id
    name
    contact_no
    guard_id
    image
    last_visited_at
    society_id
    created_at
    updated_at
    verified
    visitors_checkins {
      id
      check_in
      check_out
      flat_no
      guard_id
      attended_time
      is_allowed
    }
  }
  society_visitors_aggregate(limit: $limit, offset: $offset, where: {_or: {name: {_ilike: $_ilike}, contact_no: {_ilike: $_ilike}}, society_id: {_eq: $_eq}}) {
    aggregate {
      count
    }
  }
}

